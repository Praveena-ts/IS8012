@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<h1>Add a property</h1>
<hr />

<div class="row">
    <div class="col-md-4">
        <form method="post" novalidate="novalidate" id="add_property">
            <div class="form-group">
                <label class="control-label" for="Property_Billingdate">Billingdate</label>
                <input class="form-control" type="datetime-local" data-val="true" data-val-required="The Billingdate field is required." id="Property_Billingdate" name="Property.Billingdate" value="">
                <span class="text-danger field-validation-valid" data-valmsg-for="Property.Billingdate" data-valmsg-replace="true"></span>
            </div>
            <div class="form-group">
                <label class="control-label" for="Property_ItemName">Item Number</label>
                <input class="form-control" type="number" data-val="true" data-val-required="The bedroom Count field is required." id="Property_ItemName" name="Property.ItemName" value="">
                <span class="text-danger field-validation-valid" data-valmsg-for="Property.ItemName" data-valmsg-replace="true"></span>
            </div>
            <div class="form-group">
                <label class="control-label" for="Property_Billamount">Bill Amount</label>
                <input class="form-control" type="number" data-val="true" data-val-required="The bathroom Count field is required." id="Property_Billamount" name="Property.Billamount" value="">
                <span class="text-danger field-validation-valid" data-valmsg-for="Property.Billamount" data-valmsg-replace="true"></span>
            </div>
            
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" type="checkbox" data-val="true" data-val-required="The IsBillingComplete field is required." id="Property_IsBillingComplete" name="Property.IsBillingComplete" value="true">Item Purchased
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary">
            </div>
        </form>
    </div>
</div>

<h1>Properties List</h1>
<table class="table">
    <thead>
        <tr>
            <th>
                Billingdate
            </th>
            <th>
                Item Number
            </th>
            <th>
                Bill Amount
            </th>
           
            <th>
                Item Purchased
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="ItemList">
    </tbody>
</table>

@section Scripts {

    <script type="text/javascript">

        $(function () {
            loadData();
            $("#add_property").submit(function () {
                createProperty();
                return false;
            });
        });

        function loadData() {
            $.ajax({
                url: "/api/properties",
                dataType: 'json',
                contentType: 'application/json',
                method: 'GET'
            }).done(function (responseJSON, status, xhr) {
                buildItemsList(responseJSON);
            }).fail(function (xhr, status, error) {
                alert("There was an error retrieving the data");
            });
        }

        function buildItemsList(items) {
            $("#ItemList").empty();
            $.each(items, function (index, item) {
                $("#ItemList").append('<tr property-id="' + item.id + '"><td>' + item.Billingdate + '</td><td>' + item.ItemName + '</td><td>' + item.Billamount + '</td><td class="text-center"><input class="form-check-input" type="checkbox"></td><td><a href="#" class="pull-right property-delete">Delete</a></td></tr>');
                $('tr[property-id="' + item.id + '"] [type="checkbox"]').prop('checked', item.IsBillingComplete);
            });
        }

        function deleteBook(id) {
            $.ajax({
                url: '/api/properties/' + id,
                dataType: 'json',
                contentType: 'application/json',
                method: 'DELETE',
            }).done(function (responseData, status, xhr) {
                loadData();
            }).fail(function (xhr, status, error) {
                alert("There was an error deleting your book");
            });
        }

        $("#ItemList").on('click', 'a.property-delete', function () {
            var id = $(this).parents("tr").attr('property-id');
            if (confirm("Are you sure you want to delete this property")) {
                deleteBook(id);
            }
            return false;
        });

        function createProperty() {
            var requestData = {
                Billingdate: $("#Property_Billingdate").val(),
                ItemName: parseInt($("#Property_ItemName").val()),
                Billamount: parseInt($("#Property_Billamount").val()),
      
                IsBillingComplete: $("#Property_IsBillingComplete").is(":checked")
            };
            $.ajax({
                url: '/api/Properties',
                data: JSON.stringify(requestData),
                method: 'POST',
                dataType: 'json',
                contentType: 'application/json'
            }).done(function (response, status, xhr) {
                loadData(); // RELOAD THE ITEM DATA
                $("#Property_Billingdate").val("");
                $("#Property_ItemName").val("");
                $("#Property_Billamount").val("")
            
                $("#Property_IsBillingComplete").val("");
            }).fail(function (response, status, xhr) {
                alert("There was an error saving your property");
            });
        }


        function sellItem(id, IsBillingComplete) {
            var requestData = {
                IsBillingComplete: IsBillingComplete
            };
            $.ajax({
                url: '/api/properties/ItemLists/' + id,
                dataType: 'json',
                contentType: 'application/json',
                method: 'PUT',
                data: JSON.stringify(requestData)
            }).done(function (responseData, status, xhr) {
                loadData();
                if (callback) {
                    callback();
                }
            }).fail(function (xhr, status, error) {
                alert("There was an error saving your property");
            });
        }

        $("#ItemList").on('click', '[type="checkbox"]', function () {
            var id = $(this).parents("tr").attr('property-id');
            sellItem(id, $(this).prop('checked'));
            return false;
        });
    </script>
}
}